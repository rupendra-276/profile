// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Header from "./header/Header";
// import Footer from "./footer/Footer";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Job portal",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body>
//         <div style={{ paddingTop: "35px" }}>
//           <Header />
//         </div>
//         {children}
//         <Footer />
//       </body>
//     </html>
//   );
// }

// app/layout.js
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Header from "./header/Header";
// import Footer from "./footer/Footer";
// import ReduxProvider from "./ReduxProvider";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Job Portal",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         <div style={{ paddingTop: "35px" }}>
//           <Header />
//         </div>
//         <ReduxProvider>{children}</ReduxProvider>
//         <Footer />
//       </body>
//     </html>
//   );
// }

// ----------------
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Header from "./header/Header";
// import Footer from "./footer/Footer";
// import ReduxProvider from "./ReduxProvider";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Job Portal",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         <ReduxProvider>
//           <div style={{ paddingTop: "35px" }}>
//             <Header />
//           </div>
//           {children}
//           <Footer />
//         </ReduxProvider>
//       </body>
//     </html>
//   );
// }

// jjjjjjjjjjjjjjjjjj

import { Geist, Geist_Mono, Jost } from "next/font/google";
import "./globals.css";
import Header from "./header/Header";
import Footer from "./footer/Footer";
import ReduxProvider from "./ReduxProvider";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { Link } from "lucide-react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const jost = Jost({
  subsets: ['latin'],                       // or ['latin','latin-ext']
  weight: ['300','400','500','600','700'],  // only include what you need
  variable: '--font-jost',                  // creates a CSS var you can use in Tailwind/CSS
  display: 'swap',
})
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Spreadnext — Where Careers Meet Community",
  description: "Generated by create next app",
  icons: {
    icon: "/spreads.svg", // ✅ path from public folder
  },
};


export default function RootLayout({ children }) {
  return (
    <html lang="en">
     
      <body className={`${geistSans.variable} ${geistMono.variable} ${jost.variable}`}>
        <ReduxProvider>
          <div style={{ paddingTop: "35px" }}>
            <Header />
          </div>
          {children}
          <Footer />
          <ToastContainer
            position="top-right"
            autoClose={3000}
            hideProgressBar={false}
            newestOnTop
            closeOnClick
            rtl={false}
            pauseOnFocusLoss
            draggable
            pauseOnHover
            theme="colored"
          />
        </ReduxProvider>
      </body>
    </html>
  );
}
